version: '3.8'

services:
  web:
    build: .
    command: >
      sh -c '
      python manage.py collectstatic --noinput
      &&
      python manage.py makemigrations
      &&
      python manage.py migrate
      &&
      python manage.py loaddata ./locations_dump.json
      &&
      gunicorn app.wsgi:application --bind 0.0.0.0:8000
      '
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "python manage.py shell -c \"import sys; from django.db import connection; sys.exit(0) if connection.ensure_connection() is None else sys.exit(1)\""]
      interval: 15s
      timeout: 10s
      retries: 5
      start_period: 60s

  db:
    image: postgres:15-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
    ports:
       - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping"]
      interval: 5s
      timeout: 2s
      retries: 5

  celery_worker:
    build: .
    command: celery -A app worker -l info
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      redis:
        condition: service_healthy
      db:
        condition: service_healthy
      web:
        condition: service_healthy

  celery_beat:
    build: .
    command: celery -A app beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      redis:
        condition: service_healthy
      db:
        condition: service_healthy
      web:
        condition: service_healthy

volumes:
  postgres_data:
  redis_data: